jpsType: update
id: mysql-auto-cluster-logic
name: Database Cluster
skipNodeEmails: true
globals:
  base_url: "${settings.path}"
  scripts: "${settings.path}/scripts"
nodeGroupAlias:
  "${targetNodes.nodeGroup}": sqldb

onBeforeResetNodePassword[sqldb]:
  - cmd[${events.response.nodeid}]:
      sed -i "s/^\!includedir/#\!includedir/g" /etc/my.cnf
    user: root

onAfterResetNodePassword[sqldb]:
  - cmd[${events.response.nodeid}]: |-
      sed -i "s/^#\!includedir/\!includedir/g" /etc/my.cnf
      jem service restart
    user: root

onInstall:

  if (nodes.proxy):
    - setupCluster
  if (!nodes.proxy):
    if (nodes.sqldb.length > 1): setupCluster

onAfterScaleOut[sqldb]:
  if (!nodes.proxy): setupCluster

actions:
  install-jps:
    install:
      jps: "${this.jps}"
      nodeGroup: sqldb
      settings:
        db_user: "${settings.db_user}"
        db_pass: "${settings.db_pass}"
        scheme: "${settings.scheme}"
        path: "${globals.base_url}"

  setupCluster:
    - install-jps:
        jps: "${globals.scripts}/ms-mm-configuration.jps?_r=${fn.random}"
    - if (nodes.sqldb.length > 1):
      - install:
          jps: "${globals.scripts}/checkCluster.jps?_r=${fn.random}"
          settings:
            db_user: "${settings.db_user}"
            db_pass: "${settings.db_pass}"
            scheme: "${settings.scheme}"
            path: "${globals.base_url}"

    - if ('${settings.is_proxysql}' == 'true'):
      - install:
          jps: "${globals.scripts}/checkCluster.jps?_r=${fn.random}"
          settings:
            db_user: "${settings.db_user}"
            db_pass: "${settings.db_pass}"
            scheme: "PROXY"
            path: "${globals.base_url}"
      - install-jps:
          jps: "${globals.scripts}/proxy-configuration.jps?_r=${fn.random}"
