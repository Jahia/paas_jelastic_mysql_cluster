jpsType: update
name: Database Cluster
description: ProxySQL Load Balancer Entry Point
success: "../texts/proxy-entrypoint.md"
nodeGroupAlias:
  "${targetNodes.nodeGroup}": sqldb
globals:
  PATH: "${settings.path}"
  DB_USER: "${settings.db_user}"
  DB_PASS: "${settings.db_pass}"
  SCHEME: "${settings.scheme}"
  MONITOR_USER: monitor-${fn.random}
  MONITOR_PASS: "${fn.password(10)}"
  ORCH_PASS: "${fn.password(10)}"
  MAX_REPL_LAG: 20


onBeforeRemoveNode[proxy]:
  stopEvent

onBeforeAddNode[proxy]:
  stopEvent

onAfterScaleOut[sqldb]:
  forEach(event.response.nodes):
  - addMonitorUser:
      filter: "${@i.id}"
  - addSlave:
      id: "${@i.id}"

onBeforeScaleIn[sqldb]:
  forEach(event.response.nodes):
    removeSlave:
      id: "${@i.id}"

onAfterScaleIn[sqldb]:
  forEach(event.response.nodes):
    cmd[proxy]: mysql -h 127.0.0.1 -P3360 -uadmin -p${globals.ORCH_PASS} -e "DELETE FROM orchestrator.database_instance where hostname='node${@i.id}-${env.domain}';" &>> /var/log/run.log


onInstall:
  - log: Fetch db nodes management  scripts
  - cmd [proxy]: |-
      wget ${globals.PATH}/scripts/orchestrator-failover.sh -q -O ~/orchestrator-failover.sh
      chmod 700 ~/orchestrator-failover.sh
      wget ${globals.PATH}/scripts/proxysql-failover.sh -q -O ~/proxysql-failover.sh
      chmod 700 ~/proxysql-failover.sh
      wget ${globals.PATH}/scripts/node-recovery.sh -q -O ~/node-recovery.sh
      chmod 700 ~/node-recovery.sh
    user: root

  - log: Orchestrator configuration
  - cmd [proxy]: |-
      mysql -h 127.0.0.1 -P3360 -uroot -e "DROP DATABASE IF EXISTS orchestrator;" &>> /var/log/run.log
      mysql -h 127.0.0.1 -P3360 -uroot -e "CREATE DATABASE IF NOT EXISTS orchestrator;" &>> /var/log/run.log
      mysql -h 127.0.0.1 -P3360 -uroot -e "GRANT ALL PRIVILEGES ON orchestrator.* TO 'admin'@'127.0.0.1' IDENTIFIED BY '${globals.ORCH_PASS}';" &>> /var/log/run.log
      wget ${globals.PATH}/configs/orchestrator.conf.json -O /etc/orchestrator.conf.json &>> /var/log/run.log
      sed -i -e 's|orc_client_user|${globals.DB_USER}|g' /etc/orchestrator.conf.json &>> /var/log/run.log
      sed -i -e 's|orc_client_password|${globals.DB_PASS}|g' /etc/orchestrator.conf.json &>> /var/log/run.log
      sed -i -e 's|orc_server_user|admin|g' /etc/orchestrator.conf.json &>> /var/log/run.log
      sed -i -e 's|orc_server_password|${globals.ORCH_PASS}|g' /etc/orchestrator.conf.json &>> /var/log/run.log
      sed -i -e 's|HTTP_Auth_User|admin|g' /etc/orchestrator.conf.json &>> /var/log/run.log
      sed -i -e 's|HTTP_Auth_Password|${globals.ORCH_PASS}|g' /etc/orchestrator.conf.json &>> /var/log/run.log
      systemctl restart orchestrator
    user: root

  - log: ProxySQL configuration
  - cmd [proxy]: |-
      mysql -h 127.0.0.1 -P6032 -uadmin -padmin -e "INSERT INTO mysql_replication_hostgroups VALUES (10,11,'Group setup');" &>> /var/log/run.log
      mysql -h 127.0.0.1 -P6032 -uadmin -padmin -e "INSERT INTO mysql_users (username, password, active, default_hostgroup, max_connections)
        VALUES ('${globals.DB_USER}', '${globals.DB_PASS}', 1, 10, 1000);" &>> /var/log/run.log
      mysql -h 127.0.0.1 -P6032 -uadmin -padmin -e "INSERT INTO mysql_query_rules (active, match_pattern, destination_hostgroup, apply) VALUES (1, '^SELECT.*', 10, 1);" &>> /var/log/run.log
      mysql -h 127.0.0.1 -P6032 -uadmin -padmin -e "INSERT INTO mysql_query_rules (active, match_pattern, destination_hostgroup, apply) VALUES (1, '^SELECT.*FOR UPDATE', 10, 1);" &>> /var/log/run.log
      mysql -h 127.0.0.1 -P6032 -uadmin -padmin -e "UPDATE global_variables SET variable_value='${globals.MONITOR_USER}' WHERE variable_name='mysql-monitor_username';" &>> /var/log/run.log
      mysql -h 127.0.0.1 -P6032 -uadmin -padmin -e "UPDATE global_variables SET variable_value='${globals.MONITOR_PASS}' WHERE variable_name='mysql-monitor_password';" &>> /var/log/run.log
      mysql -h 127.0.0.1 -P6032 -uadmin -padmin -e "UPDATE global_variables SET variable_value='${nodes.sqldb.version}' WHERE variable_name='mysql-server_version';" &>> /var/log/run.log
      mysql -h 127.0.0.1 -P6032 -uadmin -padmin -e "UPDATE global_variables SET variable_value=1073741824 WHERE variable_name='mysql-max_allowed_packet';" &>> /var/log/run.log
      mysql -h 127.0.0.1 -P6032 -uadmin -padmin -e "UPDATE global_variables SET variable_value='false' WHERE variable_name='mysql-monitor_writer_is_also_reader';" &>> /var/log/run.log

      mysql -h 127.0.0.1 -P6032 -uadmin -padmin -e "LOAD MYSQL VARIABLES TO RUNTIME; SAVE MYSQL VARIABLES TO DISK;" &>> /var/log/run.log
      mysql -h 127.0.0.1 -P6032 -uadmin -padmin -e "LOAD MYSQL SERVERS TO RUNTIME; SAVE MYSQL SERVERS TO DISK;" &>> /var/log/run.log
      mysql -h 127.0.0.1 -P6032 -uadmin -padmin -e "LOAD MYSQL USERS TO RUNTIME; SAVE MYSQL USERS TO DISK;" &>> /var/log/run.log
      mysql -h 127.0.0.1 -P6032 -uadmin -padmin -e "LOAD MYSQL QUERY RULES TO RUNTIME; SAVE MYSQL QUERY RULES TO DISK;" &>> /var/log/run.log
      mysql -h 127.0.0.1 -P6032 -uadmin -padmin -e "INSERT INTO scheduler (interval_ms, filename)    VALUES (5000, '/root/proxysql-failover.sh');" &>> /var/log/run.log
      mysql -h 127.0.0.1 -P6032 -uadmin -padmin -e "LOAD SCHEDULER TO RUNTIME; SAVE SCHEDULER TO DISK;" &>> /var/log/run.log

  - forEach(nodes.sqldb):
      addMonitorUser:
        filter: "${@i.id}"

  - setGlobals:
      MAX_REPL_LAG: 0

  - addMaster:
      id: "${nodes.sqldb.master.id}"

  - forEach(k:nodes.sqldb):
    - if ('${nodes.sqldb.master.id}' != '${@k.id}'):
        - addSlave:
            id: "${@k.id}"

actions:
  addMonitorUser:
    cmd[${this.filter}]: |-
      mysql -u${globals.DB_USER} -p${globals.DB_PASS} -e "CREATE USER '${globals.MONITOR_USER}'@'%' IDENTIFIED BY '${globals.MONITOR_PASS}';" &>> /var/log/run.log
      mysql -u${globals.DB_USER} -p${globals.DB_PASS} -e "GRANT SUPER,REPLICATION CLIENT ON *.* TO '${globals.MONITOR_USER}'@'%';" &>> /var/log/run.log
      mysql -u${globals.DB_USER} -p${globals.DB_PASS} -e "FLUSH PRIVILEGES;" &>> /var/log/run.log

  addMaster:
    - log: add master in proxysql
    - cmd [proxy]: |-
        mysql -h 127.0.0.1 -P6032 -uadmin -padmin -e "INSERT INTO mysql_servers (hostgroup_id, hostname, port) VALUES (10, 'node${this.id}', 3306);" &>> /var/log/run.log
        mysql -h 127.0.0.1 -P6032 -uadmin -padmin -e "LOAD MYSQL SERVERS TO RUNTIME; SAVE MYSQL SERVERS TO DISK;" &>> /var/log/run.log
    - log: start orcherstrator discovery
    - cmd [proxy]: |-
        host node${this.id}
        systemctl is-active orchestrator;
        /usr/local/orchestrator/orchestrator -c discover -i node${this.id} cli;
      user: root

  addSlave:
    - log: add slave in proxysql
    - cmd[proxy]: |-
        mysql -h 127.0.0.1 -P6032 -uadmin -padmin -e "INSERT INTO mysql_servers (hostgroup_id, hostname, port, max_replication_lag)
          VALUES (11, 'node${this.id}', 3306, '${globals.MAX_REPL_LAG}');" &>> /var/log/run.log
        mysql -h 127.0.0.1 -P6032 -uadmin -padmin -e "LOAD MYSQL SERVERS TO RUNTIME;SAVE MYSQL SERVERS TO DISK;" &>> /var/log/run.log
    - log: set slave in read only in orchestrator
    - cmd [proxy]: |-
        host node${this.id}
        /usr/local/orchestrator/orchestrator -c set-read-only -i node${this.id}
      user: root

  removeSlave:
    cmd[proxy]: |-
      mysql -h 127.0.0.1 -P6032 -uadmin -padmin -e "DELETE FROM mysql_servers WHERE hostname = 'node${this.id}';" &>> /var/log/run.log
      mysql -h 127.0.0.1 -P6032 -uadmin -padmin -e "LOAD MYSQL SERVERS TO RUNTIME; SAVE MYSQL SERVERS TO DISK;" &>> /var/log/run.log
      mysql -h 127.0.0.1 -P3360 -uadmin -p${globals.ORCH_PASS} -e "DELETE FROM orchestrator.database_instance where hostname='node${this.id}-${env.domain}';" &>> /var/log/run.log
